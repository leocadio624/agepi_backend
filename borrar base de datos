find . -path “*/migrations/*.py” -not -name “__init__.py” -delete
find . -path “*/migrations/*.pyc” -delete

find . -path "*/migrations/*.py" -not -name "__init__.py" -delete
find . -path "*/migrations/*.pyc"  -delete



python3 manage.py makemigrations
python3 manage.py migrate
python3 manage.py shell



#
from apps.comunidad.models import ProgramaAcademico, Departamento, Academia
from apps.notification.models import TipoNotificacion
from apps.protocol.models import ProtocolState, catInscripccion

programa = ProgramaAcademico(id = 1, programa='Ingenieria en sistemas computacionales')
programa.save()

programa = ProgramaAcademico(id = 2, programa='Ingenieria en ciencia de datos')
programa.save()

programa = ProgramaAcademico(id = 3, programa='Ingenieria en inteligencia artificial')
programa.save()


#
departamento = Departamento(id = 1, departamento='Departamento de formación basica')
departamento.save()

academia = Academia(id = 1, academia='Ciencias básicas', fk_departamento = departamento)
academia.save()

#
departamento = Departamento(id = 2, departamento='Departamento de ciencias sociales')
departamento.save()

academia = Academia(id = 2, academia='Ciencias sociales', fk_departamento = departamento)
academia.save()

academia = Academia(id = 3, academia='Proyectos estratégicos y toma de decisiones', fk_departamento = departamento)
academia.save()

#
departamento = Departamento(id = 3, departamento='Departamento de ciencias e ingenieria de la computación')
departamento.save()

academia = Academia(id = 4, academia='Ciencias de la computación', fk_departamento = departamento)
academia.save()

academia = Academia(id = 5, academia='Ingenieria de software', fk_departamento = departamento)
academia.save()

academia = Academia(id = 6, academia='Sistemas distribuidos', fk_departamento = departamento)
academia.save()

#
departamento = Departamento(id = 4, departamento='Departamento de ingenieria en sistemas computacionales')
departamento.save()

academia = Academia(id = 7, academia='Sistemas digitales', fk_departamento = departamento)
academia.save()

academia = Academia(id = 8, academia='Fundamentos de sistemas eléctricos', fk_departamento = departamento)
academia.save()





notificacion = TipoNotificacion(id = 1, descp='Solicitar equipo')
notificacion.save()

notificacion = TipoNotificacion(id = 2, descp='Confirmación equipo')
notificacion.save()

notificacion = TipoNotificacion(id = 3, descp='Rechazar/Cancelar equipo')
notificacion.save()

notificacion = TipoNotificacion(id = 4, descp='Solicitud firma')
notificacion.save()

notificacion = TipoNotificacion(id = 5, descp='Protocolo firmado')
notificacion.save()

notificacion = TipoNotificacion(id = 6, descp='Protocolo seleccionado')
notificacion.save()

notificacion = TipoNotificacion(id = 7, descp='Protocolo evaluado parcialmente')
notificacion.save()

notificacion = TipoNotificacion(id = 8, descp='Protocolo evaluado')
notificacion.save()


estado_protocolo = ProtocolState(protocol_state = 1, description='Registrado')
estado_protocolo.save()

estado_protocolo = ProtocolState(protocol_state = 2, description='Por firmar')
estado_protocolo.save()

estado_protocolo = ProtocolState(protocol_state = 3, description='Firmado')
estado_protocolo.save()

estado_protocolo = ProtocolState(protocol_state = 4, description='Validado por el departamento')
estado_protocolo.save()

estado_protocolo = ProtocolState(protocol_state = 5, description='Por seleccionar')
estado_protocolo.save()

estado_protocolo = ProtocolState(protocol_state = 6, description='Seleccionado')
estado_protocolo.save()

estado_protocolo = ProtocolState(protocol_state = 7, description='Evaluado')
estado_protocolo.save()

estado_protocolo = ProtocolState(protocol_state = 8, description='Dictaminado')
estado_protocolo.save()








inscripccion = catInscripccion(id = 1, descp='Primera evaluación', state = False)
inscripccion.save()

inscripccion = catInscripccion(id = 2, descp='Segunda evaluación', state = False)
inscripccion.save()

inscripccion = catInscripccion(id = 3, descp='Remedial primera evaluación', state = False)
inscripccion.save()

inscripccion = catInscripccion(id = 4, descp='Remedial segunda evaluación', state = False)
inscripccion.save()


exit()







